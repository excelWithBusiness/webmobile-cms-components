{"version":3,"sources":["../../../../src/pages/FaqPage/Content/Content.tsx"],"names":["React","Cell","Grid","Offset","Row","Section","Spacer","Accordion","prepareEntries","pageComponents","entries","map","title","description","details","e","i","isOpenInitially","noBorderTop","Content","slices","Array","isArray","length","slice","index","keyProp","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,SAPF,QAQO,4CARP;AAUA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,cAAH,QAAGA,cAAH;AAAA,SAC5BA,cAAc,CAACC,OAAf,CACGC,GADH,CACO;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,WAAV,SAAUA,WAAV;AAAA,WAA6B;AAChCD,MAAAA,KAAK,EAALA,KADgC;AAEhCE,MAAAA,OAAO,EAAED;AAFuB,KAA7B;AAAA,GADP,EAKGF,GALH,CAKO,UAACI,CAAD,EAAIC,CAAJ;AAAA,WACHA,CAAC,KAAK,CAAN,mCAESD,CAFT;AAGME,MAAAA,eAAe,EAAE,IAHvB;AAIMC,MAAAA,WAAW,EAAE;AAJnB,SAMIH,CAPD;AAAA,GALP,CAD4B;AAAA,CAAvB;AAgBP,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,QAAmC;AAAA,MAAhCC,MAAgC,SAAhCA,MAAgC;;AACxD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,IAA0B,CAACA,MAAM,CAACG,MAAtC,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,OAAD,QACGH,MADH,aACGA,MADH,uBACGA,MAAM,CAAET,GAAR,CAAY,UAACa,KAAD,EAAaC,KAAb,EAA+B;AAC1C,QAAMC,OAAO,aAAMF,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEG,IAAb,cAAqBF,KAArB,CAAb;;AACA,YAAQD,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAEG,IAAf;AACE,WAAK,WAAL;AACE,eACE,oBAAC,IAAD,QACE,oBAAC,GAAD,QACE,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAE,CAAhB;AAAmB,UAAA,OAAO,EAAE;AAA5B,UADF,EAEE,oBAAC,IAAD;AAAM,UAAA,OAAO,EAAE;AAAf,WACE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC;AAAb,UADF,EAEE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAED,OADP;AAEE,UAAA,OAAO,EAAElB,cAAc,CAACgB,KAAD,CAFzB;AAGE,UAAA,OAAO,MAHT;AAIE,UAAA,gBAAgB;AAJlB,UAFF,CAFF,CADF,CADF;;AAgBF;AACE,eAAO,IAAP;AAnBJ;AAqBD,GAvBA,CADH,CADF;AA4BD,CAjCM","sourcesContent":["import React from 'react'\nimport {\n  Cell,\n  Grid,\n  Offset,\n  Row,\n  Section,\n  Spacer,\n  Accordion,\n} from '@excelwithbusiness/webmobile-sc-components'\n\nexport const prepareEntries = ({ pageComponents }) =>\n  pageComponents.entries\n    .map(({ title, description }) => ({\n      title,\n      details: description,\n    }))\n    .map((e, i) =>\n      i === 0\n        ? {\n            ...e,\n            isOpenInitially: true,\n            noBorderTop: true,\n          }\n        : e\n    )\n\nexport const Content = ({ slices }: { slices: any[] }) => {\n  if (!Array.isArray(slices) || !slices.length) {\n    return null\n  }\n\n  return (\n    <Section>\n      {slices?.map((slice: any, index: number) => {\n        const keyProp = `${slice?.type}_${index}`\n        switch (slice?.type) {\n          case 'Accordion':\n            return (\n              <Grid>\n                <Row>\n                  <Offset colsXs={0} columns={1} />\n                  <Cell columns={10}>\n                    <Spacer size=\"md\" />\n                    <Accordion\n                      key={keyProp}\n                      entries={prepareEntries(slice)}\n                      isLarge\n                      withIconsOnRight\n                    />\n                  </Cell>\n                </Row>\n              </Grid>\n            )\n          default:\n            return null\n        }\n      })}\n    </Section>\n  )\n}\n"],"file":"Content.js"}