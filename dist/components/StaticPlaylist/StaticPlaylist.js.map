{"version":3,"sources":["../../../src/components/StaticPlaylist/StaticPlaylist.tsx"],"names":["React","Cell","CopyText","Heading","Icon","IconInfoOutlined","Row","ScrollAssetCarousel","styled","ToolTip","useHistory","StyledToolTip","PlaylistHeader","title","toolTip","name","StaticPlaylist","loading","assets","type","id","tooltip","desktop","onSlideChange","onBookmarkClick","history","asset","interaction","bookmarked","push","pathname","niceName","mobileBig","mobileSmall","tablet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Cell,\n  CopyText,\n  Heading,\n  Icon,\n  IconInfoOutlined,\n  Row,\n  ScrollAssetCarousel,\n  styled,\n  ToolTip,\n} from 'webmobile-sc-components';\nimport {useHistory} from 'react-router-dom';\nimport {AssetCarouselDefaultProps} from \"./StaticPlaylist.types\";\n\nexport const StyledToolTip = styled(ToolTip)\n  `z-index: 10;`;\n\nexport const PlaylistHeader = ({title, toolTip, name}) => (\n  <>\n    <CopyText\n      limitLines={1}\n      fontSize=\"sm\"\n      as=\"div\"\n      display=\"inline-flex\"\n      margin=\"0 sm xs 0\"\n    >\n      {title}\n    </CopyText>\n    <StyledToolTip content={toolTip}>\n      <Icon width=\"8px\" height=\"8px\">\n        <IconInfoOutlined/>\n      </Icon>\n    </StyledToolTip>\n    <Heading\n      color=\"primary\"\n      scale=\"level-2\"\n      tag=\"h2\"\n      lineHeight=\"sm\"\n      fontFamily=\"default\"\n      weight=\"semibold\"\n    >\n      {name}\n    </Heading>\n  </>\n);\n\n\nexport const StaticPlaylist: React.FC<AssetCarouselDefaultProps> = ({\n                                                                      loading,\n                                                                      assets,\n                                                                      type,\n                                                                      id,\n                                                                      name,\n                                                                      title,\n                                                                      tooltip,\n                                                                      desktop,\n                                                                      onSlideChange,\n                                                                      onBookmarkClick,\n                                                                    }): JSX.Element => {\n  const history = useHistory()\n  return (\n    <Row id={id} data-name={name}>\n      <Cell columns={12}>\n        <ScrollAssetCarousel\n          headline={title}\n          data-test=\"landing-page-playlist\"\n          title={<PlaylistHeader title={title} toolTip={tooltip} name={name}/>}\n          loading={!assets}\n          assets={assets}\n          onSlideChange={() =>\n            onSlideChange?.({id, name})\n          }\n          onBookmarkClick={({asset}) =>\n            onBookmarkClick?.(\n              asset.id,\n              !asset.interaction.bookmarked,\n              id\n            )\n          }\n          onAssetClick={({asset}) =>\n            history.push({\n              pathname: `/learning-asset/${asset.niceName}?pid_hint=${id}`,\n            })\n          }\n          context={name}\n          lazyLoad\n          showArrows\n          withLQIP\n          tileMargin=\"md\"\n          slidesPerPageSettings={{\n            desktop,\n            mobileBig: 1,\n            mobileSmall: 1,\n            tablet: 3,\n          }}\n        />\n      </Cell>\n    </Row>\n  );\n}\n"],"file":"StaticPlaylist.js"}