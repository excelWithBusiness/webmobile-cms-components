{"version":3,"sources":["../../../src/components/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","Button","CallToActionPanel","CopyText","Heading","Spacer","styled","orientation","right","left","StyledChildContainer","div","theme","spacing","base","xs","CmsCallToActionPanel","content","svg","withLQIP","alignment","rightOrientation","image","heading","description","button","link","text"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SACEC,MADF,EAEEC,iBAFF,EAGEC,QAHF,EAIEC,OAJF,EAMEC,MANF,EAOEC,MAPF,QAQO,4CARP;AAYA,IAAMC,WAAsE,GAAG;AAC7EC,EAAAA,KAAK,EAAE,OADsE;AAE7EC,EAAAA,IAAI,EAAE;AAFuE,CAA/E;AAuCA,IAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,yDAGb;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CAHa,CAA1B;AAMA,OAAO,IAAMC,oBAAmD,GAAG,SAAtDA,oBAAsD,QAIhD;AAAA;;AAAA,MAHjBC,OAGiB,SAHjBA,OAGiB;AAAA,MAFjBC,GAEiB,SAFjBA,GAEiB;AAAA,6BADjBC,QACiB;AAAA,MADjBA,QACiB,+BADN,KACM;AACjB,MAAMC,SAAS,GAAGH,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEI,gBAAT,GAA4Bd,WAAW,CAACC,KAAxC,GAAgDD,WAAW,CAACE,IAA9E;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP,QACE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAEW,SADb;AAEE,IAAA,KAAK,oBAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,KAAX,2DAAoB,IAF3B;AAGE,IAAA,GAAG,EAAE,EAACL,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEK,KAAV,KAAmBJ,GAH1B;AAIE,IAAA,QAAQ,EAAEC;AAJZ,KAKE,oBAAC,oBAAD,QACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAC,IAA7B;AAAkC,IAAA,MAAM,EAAC,SAAzC;AAAmD,IAAA,MAAM,EAAC,SAA1D;AAAoE,IAAA,SAAS,EAAC;AAA9E,KACGF,OADH,aACGA,OADH,uBACGA,OAAO,CAAEM,OADZ,CADF,EAIE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,MAAM,EAAC,GAAvC;AAA2C,IAAA,KAAK,EAAC,OAAjD;AAAyD,IAAA,OAAO,EAAC,MAAjE;AAAwE,IAAA,SAAS,EAAC;AAAlF,KACGN,OADH,aACGA,OADH,uBACGA,OAAO,CAAEO,WADZ,CAJF,EAOG,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,MAAT,KACC,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,IAAlC;AAAuC,IAAA,MAAM,EAAC,MAA9C;AAAqD,IAAA,IAAI,EAAER,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEQ,MAAT,CAAgBC;AAA3E,KACGT,OADH,aACGA,OADH,uBACGA,OAAO,CAAEQ,MAAT,CAAgBE,IADnB,CARJ,CALF,CADF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,IApBF,CADF;AAwBD,CA/BM","sourcesContent":["import React, { FC } from 'react'\nimport {\n  Button,\n  CallToActionPanel,\n  CopyText,\n  Heading,\n  Image,\n  Spacer,\n  styled,\n} from '@excelwithbusiness/webmobile-sc-components'\n\nexport type SelectableOrientation = 'left' | 'right'\n\nconst orientation: { [key in SelectableOrientation]: SelectableOrientation } = {\n  right: 'right',\n  left: 'left',\n}\n\ntype CmsButton = {\n  id: string\n  text: string\n  link?: string | undefined\n  type: string | undefined\n}\n\nexport interface CmsImage {\n  id: string\n  url: string\n  alt?: string\n  fileName?: string\n  mimeType?: string\n  width?: number\n  height?: number\n  size?: number\n  type?: string | undefined\n}\n\nexport interface CmsCallToActionPanelProps {\n  type: string\n  id: string\n  button: CmsButton\n  description: string\n  heading: string\n  image: Image | undefined\n  rightOrientation: string\n  title: string\n}\n\nexport interface CmsCallToActionPanelProps extends ImageAndTextProps {\n  content: CmsCallToActionPanelProps\n}\n\nconst StyledChildContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.spacing.base.xs};\n`\n\nexport const CmsCallToActionPanel: FC<CmsCallToActionPanelProps> = ({\n  content,\n  svg,\n  withLQIP = false,\n}): JSX.Element => {\n  const alignment = content?.rightOrientation ? orientation.right : orientation.left\n\n  return (\n    <React.Fragment>\n      <CallToActionPanel\n        alignment={alignment}\n        image={content?.image ?? null}\n        svg={!content?.image && svg}\n        withLQIP={withLQIP}>\n        <StyledChildContainer>\n          <Heading scale=\"level-1\" tag=\"h1\" weight=\"regular\" margin=\"0 0 xxl\" textAlign=\"left\">\n            {content?.heading}\n          </Heading>\n          <CopyText tag=\"div\" padding=\"0\" margin=\"0\" color=\"grey5\" display=\"flex\" textAlign=\"left\">\n            {content?.description}\n          </CopyText>\n          {content?.button && (\n            <Button actionType=\"primary\" size=\"md\" weight=\"bold\" href={content?.button.link}>\n              {content?.button.text}\n            </Button>\n          )}\n        </StyledChildContainer>\n      </CallToActionPanel>\n      <Spacer size=\"md\" />\n    </React.Fragment>\n  )\n}\n"],"file":"CallToActionPanel.js"}