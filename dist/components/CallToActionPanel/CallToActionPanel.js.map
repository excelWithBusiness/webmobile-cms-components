{"version":3,"sources":["../../../src/components/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","Button","CallToActionPanel","CopyText","Heading","Spacer","styled","orientation","right","left","StyledChildContainer","div","theme","spacing","base","xs","CmsCallToActionPanel","content","svg","withLQIP","alignment","rightOrientation","image","heading","description","button","link","text"],"mappings":"AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SACIC,MADJ,EAEIC,iBAFJ,EAGIC,QAHJ,EAIIC,OAJJ,EAMIC,MANJ,EAOIC,MAPJ,QAQO,4CARP;AAYA,IAAMC,WAAsE,GAAG;AAC3EC,EAAAA,KAAK,EAAE,OADoE;AAE3EC,EAAAA,IAAI,EAAE;AAFqE,CAA/E;AAuCA,IAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,yDAGX;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,SAAaA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAhC;AAAA,CAHW,CAA1B;AAMA,OAAO,IAAMC,oBAAmD,GAAG,SAAtDA,oBAAsD,QAIoB;AAAA;;AAAA,MAHfC,OAGe,SAHfA,OAGe;AAAA,MAFfC,GAEe,SAFfA,GAEe;AAAA,6BADfC,QACe;AAAA,MADfA,QACe,+BADJ,KACI;AACnF,MAAMC,SAAS,GAAGH,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEI,gBAAT,GAA4Bd,WAAW,CAACC,KAAxC,GAAgDD,WAAW,CAACE,IAA9E;AAEA,SACI,oBAAC,KAAD,CAAO,QAAP,QACI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEW,SAA9B;AAAyC,IAAA,KAAK,oBAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,KAAX,2DAAoB,IAAlE;AACmB,IAAA,GAAG,EAAE,EAACL,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEK,KAAV,KAAmBJ,GAD3C;AACgD,IAAA,QAAQ,EAAEC;AAD1D,KAEI,oBAAC,oBAAD,QACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAC,IAA7B;AAAkC,IAAA,MAAM,EAAC,SAAzC;AAAmD,IAAA,MAAM,EAAC,SAA1D;AACS,IAAA,SAAS,EAAC;AADnB,KAEKF,OAFL,aAEKA,OAFL,uBAEKA,OAAO,CAAEM,OAFd,CADJ,EAKI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,MAAM,EAAC,GAAvC;AAA2C,IAAA,KAAK,EAAC,OAAjD;AAAyD,IAAA,OAAO,EAAC,MAAjE;AACU,IAAA,SAAS,EAAC;AADpB,KAEKN,OAFL,aAEKA,OAFL,uBAEKA,OAAO,CAAEO,WAFd,CALJ,EASK,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,MAAT,KAAoB,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,IAAlC;AAAuC,IAAA,MAAM,EAAC,MAA9C;AACQ,IAAA,IAAI,EAAER,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEQ,MAAT,CAAgBC;AAD9B,KACqCT,OADrC,aACqCA,OADrC,uBACqCA,OAAO,CAAEQ,MAAT,CAAgBE,IADrD,CATzB,CAFJ,CADJ,EAgBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,IAhBJ,CADJ;AAoBH,CA3BM","sourcesContent":["import React, {FC} from 'react';\nimport {\n    Button,\n    CallToActionPanel,\n    CopyText,\n    Heading,\n    Image,\n    Spacer,\n    styled,\n} from '@excelwithbusiness/webmobile-sc-components';\n\nexport type SelectableOrientation = 'left' | 'right'\n\nconst orientation: { [key in SelectableOrientation]: SelectableOrientation } = {\n    right: 'right',\n    left: 'left',\n};\n\ntype CmsButton = {\n    id: string\n    text: string\n    link?: string | undefined\n    type: string | undefined\n}\n\nexport interface CmsImage {\n    id: string\n    url: string\n    alt?: string\n    fileName?: string\n    mimeType?: string\n    width?: number\n    height?: number\n    size?: number\n    type?: string | undefined\n}\n\nexport interface CallToActionPanel {\n    type: string\n    id: string\n    button: CmsButton\n    description: string\n    heading: string\n    image: Image | undefined\n    rightOrientation: string\n    title: string\n}\n\nexport interface CmsCallToActionPanelProps extends ImageAndTextProps {\n    content: CallToActionPanel\n}\n\nconst StyledChildContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: ${({theme}) => theme.spacing.base.xs};\n`;\n\nexport const CmsCallToActionPanel: FC<CmsCallToActionPanelProps> = ({\n                                                                        content,\n                                                                        svg,\n                                                                        withLQIP = false,\n                                                                    }): JSX.Element => {\n    const alignment = content?.rightOrientation ? orientation.right : orientation.left;\n\n    return (\n        <React.Fragment>\n            <CallToActionPanel alignment={alignment} image={content?.image ?? null}\n                               svg={!content?.image && svg} withLQIP={withLQIP}>\n                <StyledChildContainer>\n                    <Heading scale=\"level-1\" tag=\"h1\" weight=\"regular\" margin=\"0 0 xxl\"\n                             textAlign=\"left\">\n                        {content?.heading}\n                    </Heading>\n                    <CopyText tag=\"div\" padding=\"0\" margin=\"0\" color=\"grey5\" display=\"flex\"\n                              textAlign=\"left\">\n                        {content?.description}\n                    </CopyText>\n                    {content?.button && (<Button actionType=\"primary\" size=\"md\" weight=\"bold\"\n                                                 href={content?.button.link}>{content?.button.text}</Button>)}\n                </StyledChildContainer>\n            </CallToActionPanel>\n            <Spacer size=\"md\" />\n        </React.Fragment>\n    );\n};\n"],"file":"CallToActionPanel.js"}