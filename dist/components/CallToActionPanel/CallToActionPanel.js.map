{"version":3,"sources":["../../../src/components/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","Button","CopyText","Heading","ImageAndText","styled","orientation","right","left","StyledChildContainer","div","CmsCallToActionPanel","content","svg","withLQIP","alignment","rightOrientation","image","url","heading","description","button","link","text"],"mappings":"AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,YAJF,EAMEC,MANF,QAOO,4CAPP;AAWA,IAAMC,WAAsE,GAAG;AAC7EC,EAAAA,KAAK,EAAE,OADsE;AAE7EC,EAAAA,IAAI,EAAE;AAFuE,CAA/E;AAsCA,IAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,gFAA1B;AAMA,OAAO,IAAMC,oBAAmD,GAAG,SAAtDA,oBAAsD,OAA4D;AAAA,MAAzDC,OAAyD,QAAzDA,OAAyD;AAAA,sBAAhDC,GAAgD;AAAA,MAAhDA,GAAgD,yBAA1C,IAA0C;AAAA,2BAApCC,QAAoC;AAAA,MAApCA,QAAoC,8BAAzB,KAAyB;AAE7H,MAAMC,SAAS,GAAGH,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEI,gBAAT,GAA4BV,WAAW,CAACC,KAAxC,GAAgDD,WAAW,CAACE,IAA9E;AAEA,SACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEO,SAAzB;AAAoC,IAAA,KAAK,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,KAAT,CAAeC,GAA1D;AAA+D,IAAA,GAAG,EAAEL,GAApE;AAAyE,IAAA,QAAQ,EAAEC;AAAnF,KACE,oBAAC,oBAAD,QACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAC,IAA7B;AAAkC,IAAA,MAAM,EAAC,SAAzC;AAAmD,IAAA,MAAM,EAAC,GAA1D;AAA8D,IAAA,SAAS,EAAC;AAAxE,KACGF,OADH,aACGA,OADH,uBACGA,OAAO,CAAEO,OADZ,CADF,EAIE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,GAAd;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,MAAM,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAC,OAArD;AAA6D,IAAA,OAAO,EAAC;AAArE,KACGP,OADH,aACGA,OADH,uBACGA,OAAO,CAAEQ,WADZ,CAJF,EAOE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,IAAlC;AAAuC,IAAA,MAAM,EAAC,MAA9C;AAAqD,IAAA,IAAI,EAAER,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAES,MAAT,CAAgBC;AAA3E,KACGV,OADH,aACGA,OADH,uBACGA,OAAO,CAAES,MAAT,CAAgBE,IADnB,CAPF,CADF,CADF;AAeD,CAnBM","sourcesContent":["import React, {FC} from 'react'\nimport {\n  Button,\n  CopyText,\n  Heading,\n  ImageAndText,\n  ImageAndTextProps,\n  styled\n} from '@excelwithbusiness/webmobile-sc-components'\n\nexport type SelectableOrientation = 'left' | 'right'\n\nconst orientation: { [key in SelectableOrientation]: SelectableOrientation } = {\n  right: 'right',\n  left: 'left'\n}\n\ntype CmsButton = {\n  id: string\n  text: string\n  link?: string | null\n  type: string | null\n}\n\ntype CmsImage = {\n  id: string\n  url: string\n  fileName?: string\n  mimeType?: string\n  width?: number\n  height?: number\n  size?: number\n  type?: string | null\n}\n\ntype CallToActionPanel = {\n  type: string\n  id: string\n  button: CmsButton\n  description: string\n  heading: string\n  image: CmsImage\n  rightOrientation: string\n  title: string\n}\n\nexport interface CmsCallToActionPanelProps extends ImageAndTextProps {\n  content: CallToActionPanel\n}\n\nconst StyledChildContainer = styled.div`\n  display: flex;\n  flex: 0 1 auto;\n  padding: $(({ theme}) => theme.spacing.base.sm)\n`\n\nexport const CmsCallToActionPanel: FC<CmsCallToActionPanelProps> = ({ content, svg = null, withLQIP = false }): JSX.Element => {\n  // use the ID from the Instance to query CallToActionPanel\n  const alignment = content?.rightOrientation ? orientation.right : orientation.left;\n\n  return (\n    <ImageAndText aligmnent={alignment} image={content?.image.url} svg={svg} withLQIP={withLQIP}>\n      <StyledChildContainer>\n        <Heading scale=\"level-1\" tag=\"h1\" weight=\"regular\" margin=\"0\" alignText=\"center\">\n          {content?.heading}\n        </Heading>\n        <CopyText tag=\"p\" padding=\"md 0\" margin=\"0 md\" color=\"grey5\" display=\"flex\">\n          {content?.description}\n        </CopyText>\n        <Button actionType=\"primary\" size=\"md\" weight=\"bold\" href={content?.button.link}>\n          {content?.button.text}\n        </Button>\n      </StyledChildContainer>\n    </ImageAndText>\n  )\n}\n\n"],"file":"CallToActionPanel.js"}