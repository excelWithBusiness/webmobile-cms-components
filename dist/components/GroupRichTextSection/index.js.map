{"version":3,"sources":["../../../src/components/GroupRichTextSection/index.tsx"],"names":["React","Card","Grid","Cell","Row","Offset","StyledCardRichText","StyledCardHeadline","StyledGroupRichText","HeadlineSection","CustomSection","ConfigurablePrismicHtmlSerializer","Serializer","renderTextRows","fields","map","field","index","textField","GroupRichTextSection","sectionColor","anchorId","undefined","title"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA8C,yBAA9C;AAEA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,mBAHF;AAKA,SAASC,eAAT;AACA,SAASC,aAAT;AACA,SAASC,iCAAT,EAA4CC,UAA5C;AAEA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAsC;AAC3D,SAAOA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAgCC,KAAhC,EAAkD;AAClE,WACED,KAAK,CAACE,SAAN,IACE,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED;AAApB,OACE,oBAAC,IAAD,QAAOL,UAAU,CAACI,KAAK,CAACE,SAAP,EAAkBP,iCAAiC,CAAC,EAAD,CAAnD,CAAjB,CADF,CAFJ;AAOD,GARM,CAAP;AASD,CAVD;;AAYA,OAAO,IAAMQ,oBAAyD,GAAG,SAA5DA,oBAA4D,OAInE;AAAA;;AAAA,MAHJL,MAGI,QAHJA,MAGI;AAAA,MAFJM,YAEI,QAFJA,YAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,SACE,oBAAC,mBAAD;AAAqB,IAAA,EAAE,EAAEA,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAcC;AAArC,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEF;AAAtB,KACE,oBAAC,IAAD,QACE,oBAAC,GAAD;AAAK,IAAA,QAAQ;AAAb,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,CAAhB;AAAmB,IAAA,MAAM,EAAE,CAA3B;AAA8B,IAAA,MAAM,EAAE,CAAtC;AAAyC,IAAA,MAAM,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE,EAAd;AAAkB,IAAA,MAAM,EAAE,EAA1B;AAA8B,IAAA,MAAM,EAAE,CAAtC;AAAyC,IAAA,MAAM,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,KACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,cAAc,EAAE,CAFlB;AAGE,IAAA,OAAO,EAAC,IAHV;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,OAAO,EAAC;AALV,KAME,oBAAC,kBAAD,QACE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,cAAEN,MAAM,CAAC,CAAD,CAAR,6CAAE,SAAWS;AAAtC,IADF,CANF,EASE,oBAAC,kBAAD,QAAqBV,cAAc,CAACC,MAAD,CAAnC,CATF,CADF,CAFF,CADF,CADF,CADF,CADF;AAwBD,CA7BM","sourcesContent":["import * as React from 'react'\nimport { Card, Grid, Cell, Row, Offset } from 'webmobile-sc-components'\nimport { GroupRichTextSectionProps, GroupRichTextFieldType } from './GroupRichTextSection.types'\nimport {\n  StyledCardRichText,\n  StyledCardHeadline,\n  StyledGroupRichText,\n} from './GroupRichTextSection.styled'\nimport { HeadlineSection } from '../HeadlineSection'\nimport { CustomSection } from '../CustomSection'\nimport { ConfigurablePrismicHtmlSerializer, Serializer } from '../Serializer'\n\nexport * from './GroupRichTextSection.types'\n\nconst renderTextRows = (fields: GroupRichTextFieldType[]) => {\n  return fields.map((field: GroupRichTextFieldType, index: number) => {\n    return (\n      field.textField && (\n        <CustomSection key={index}>\n          <Grid>{Serializer(field.textField, ConfigurablePrismicHtmlSerializer({}))}</Grid>\n        </CustomSection>\n      )\n    )\n  })\n}\n\nexport const GroupRichTextSection: React.FC<GroupRichTextSectionProps> = ({\n  fields,\n  sectionColor,\n  anchorId,\n}) => {\n  return (\n    <StyledGroupRichText id={anchorId ?? undefined}>\n      <CustomSection color={sectionColor}>\n        <Grid>\n          <Row noMargin>\n            <Offset colsXl={1} colsLg={1} colsMd={1} colsSm={1} colsXs={0} />\n            <Cell colsXl={10} colsLg={10} colsMd={6} colsSm={6} colsXs={4}>\n              <Card\n                elevation={0}\n                elevationHover={0}\n                padding=\"md\"\n                shape=\"rounded-big\"\n                surface=\"white\">\n                <StyledCardHeadline>\n                  <HeadlineSection headline={fields[0]?.title} />\n                </StyledCardHeadline>\n                <StyledCardRichText>{renderTextRows(fields)}</StyledCardRichText>\n              </Card>\n            </Cell>\n          </Row>\n        </Grid>\n      </CustomSection>\n    </StyledGroupRichText>\n  )\n}\n"],"file":"index.js"}