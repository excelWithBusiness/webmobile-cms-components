{"version":3,"sources":["../../../src/components/GroupRichTextSection/GroupRichTextSection.test.tsx"],"names":["cleanup","React","GroupRichTextSection","mountWithTheme","Typo","mockAnchorId","describe","afterEach","it","groupText","textField","text","type","spans","title","sectionColor","renderCardSection","heading","find","last","expect","toBe","paragraph"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT;AACA,SAASC,cAAT,EAAyBC,IAAzB,QAAqC,yBAArC;AAGA,IAAMC,YAAY,GAAG,mBAArB;AAEAC,QAAQ,CAAC,gDAAD,EAAmD,YAAM;AAC/DC,EAAAA,SAAS,CAACP,OAAD,CAAT;AAEAQ,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,QAAMC,SAAmC,GAAG,CAC1C;AACEC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADS,EAMT;AACEF,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANS,CADb;AAaEC,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,IAAI,EAAE,UAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADK,EAML;AACEF,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,IAAI,EAAE,UAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANK;AAbT,KAD0C,CAA5C;AA4BA,QAAME,YAAY,GAAG,OAArB;AAEA,QAAMC,iBAAiB,GAAGb,cAAc,CACtC,oBAAC,oBAAD;AACE,MAAA,MAAM,EAAEM,SADV;AAEE,MAAA,YAAY,EAAEM,YAFhB;AAGE,MAAA,QAAQ,EAAEV;AAHZ,MADsC,CAAxC;AAQA,QAAMY,OAAO,GAAGD,iBAAiB,CAACE,IAAlB,CAAuB,IAAvB,EAA6BC,IAA7B,EAAhB;AACAC,IAAAA,MAAM,CAACH,OAAO,CAACN,IAAR,EAAD,CAAN,CAAuBU,IAAvB,CAA4BZ,SAAS,CAAC,CAAD,CAAT,CAAaK,KAAb,CAAmB,CAAnB,EAAsBH,IAAlD;AAEA,QAAMW,SAAS,GAAGN,iBAAiB,CAACE,IAAlB,CAAuBd,IAAvB,EAA6Be,IAA7B,EAAlB;AACAC,IAAAA,MAAM,CAACE,SAAS,CAACX,IAAV,EAAD,CAAN,CAAyBU,IAAzB,CAA8BZ,SAAS,CAAC,CAAD,CAAT,CAAaC,SAAb,CAAuB,CAAvB,EAA0BC,IAAxD;AACD,GA5CC,CAAF;AA6CD,CAhDO,CAAR","sourcesContent":["import { cleanup } from '@testing-library/react'\nimport * as React from 'react'\nimport { GroupRichTextSection } from './index'\nimport { mountWithTheme, Typo } from 'webmobile-sc-components'\nimport { GroupRichTextFieldType } from './GroupRichTextSection.types'\n\nconst mockAnchorId = 'groupTextAnchorId'\n\ndescribe('Content:Common:Components:GroupRichTextSection', () => {\n  afterEach(cleanup)\n\n  it('renders section with group richtext', () => {\n    const groupText: GroupRichTextFieldType[] = [\n      {\n        textField: [\n          {\n            text: 'TextField1',\n            type: 'paragraph',\n            spans: [],\n          },\n          {\n            text: 'TextField2',\n            type: 'paragraph',\n            spans: [],\n          },\n        ],\n        title: [\n          {\n            text: 'Title1',\n            type: 'heading1',\n            spans: [],\n          },\n          {\n            text: 'title2',\n            type: 'heading2',\n            spans: [],\n          },\n        ],\n      },\n    ]\n    const sectionColor = 'grey1'\n\n    const renderCardSection = mountWithTheme(\n      <GroupRichTextSection\n        fields={groupText}\n        sectionColor={sectionColor}\n        anchorId={mockAnchorId}\n      />\n    )\n\n    const heading = renderCardSection.find('h1').last()\n    expect(heading.text()).toBe(groupText[0].title[0].text)\n\n    const paragraph = renderCardSection.find(Typo).last()\n    expect(paragraph.text()).toBe(groupText[0].textField[1].text)\n  })\n})\n"],"file":"GroupRichTextSection.test.js"}